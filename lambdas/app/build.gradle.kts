import org.apache.tools.ant.util.JavaEnvUtils.VERSION_11

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.7.10"
    id("com.github.johnrengelman.shadow") version "7.1.2"

    // Apply the application plugin to add support for building a CLI application in Java.
//    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
  implementation("com.google.guava:guava:31.1-jre")
  implementation("com.amazonaws:aws-lambda-java-core:1.1.0")
  implementation("com.amazonaws:aws-lambda-java-events:2.2.2")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use Kotlin Test test framework
            useKotlinTest("1.7.10")

            dependencies {
                // Use newer version of JUnit Engine for Kotlin Test
                implementation("org.junit.jupiter:junit-jupiter-engine:5.9.1")
            }
        }
    }
}

java {
  targetCompatibility = JavaVersion.VERSION_1_8
}

//tasks {
//  shadowJar {
//    include("*.jar")
//    include("build.gradle.kts")
//  }
//}

//jar {
//  archiveFileName.set("twitter-bot-vue-3.jar")
//  from(configurations
//    .runtimeClasspath.get().files.filter { it.exists() }
//    .map { if (it.isDirectory) it else zipTree(it) })
//}

//application {
//    // Define the main class for the application.
//    mainClass.set("cdk.sam.lambdas.AppKt")
//}

//tasks {
//  named<com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar>("shadowJar") {
//    archiveBaseName.set("lambdas-kotlin.jar")
//  }

//  jar {
//    archiveFileName.set("lambdas-kotlin.jar")
//    from(configurations
//      .runtimeClasspath.get().files.filter { it.exists() }
//      .map { if (it.isDirectory) it else zipTree(it) })
//  }
//}
